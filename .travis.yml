matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - texlive-full
            - graphviz
      env:
        - MATRIX_EVAL="export CC=gcc-6 && export CXX=g++-6"
        - NORMALIZ_VERSION=3.3.0
      before_install:
        - eval ${MATRIX_EVAL}
      python: 2.7
      language: python

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - texlive-full
            - graphviz
      env:
        - MATRIX_EVAL="export CC=gcc-7 && export CXX=g++-7"
        - NORMALIZ_VERSION=3.4.0
      before_install:
        - eval ${MATRIX_EVAL}
      python: 2.7
      language: python

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - texlive-full
            - graphviz
      env:
        - MATRIX_EVAL="export CC=gcc-7 && export CXX=g++-7"
        - NORMALIZ_VERSION=3.5.4
      before_install:
        - eval ${MATRIX_EVAL}
      python: 2.7
      language: python

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - texlive-full
            - graphviz
      env:
        - MATRIX_EVAL="export CC=gcc-6 && export CXX=g++-6"
        - NORMALIZ_VERSION=3.4.0
      before_install:
        - eval ${MATRIX_EVAL}
      python: 3.5
      language: python

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - texlive-full
            - graphviz
      env:
        - MATRIX_EVAL="export CC=gcc-7 && export CXX=g++-7"
        - NORMALIZ_VERSION=3.3.0
      before_install:
        - eval ${MATRIX_EVAL}
      python: 3.5
      language: python

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - texlive-full
            - graphviz
      env:
        - MATRIX_EVAL="export CC=gcc-6 && export CXX=g++-6"
        - NORMALIZ_VERSION=3.3.0
      python: 3.6
      before_install:
        - eval ${MATRIX_EVAL}
      language: python

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - texlive-full
            - graphviz
      env:
        - MATRIX_EVAL="export CC=gcc-7 && export CXX=g++-7"
        - NORMALIZ_VERSION=3.4.0
      python: 3.6
      before_install:
        - eval ${MATRIX_EVAL}
      language: python

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - texlive-full
            - graphviz
      env:
        - MATRIX_EVAL="export CC=gcc-7 && export CXX=g++-7"
        - NORMALIZ_VERSION=3.5.4
      python: 3.6
      before_install:
        - eval ${MATRIX_EVAL}
      language: python

    - os: osx
      osx_image: xcode9.3
      language: c++
      compiler: clang
      env:
        - NORMALIZ_VERSION=3.3.0
        - PYTHON_INSTALL='sudo easy_install'
      before_install:
        - $PYTHON_INSTALL nose
        # update brew first, work around https://github.com/Homebrew/brew/issues/3299
        - brew update
        - brew install graphviz

    - os: osx
      osx_image: xcode9.3
      language: c++
      compiler: clang
      env:
        - NORMALIZ_VERSION=3.4.0
        - PYTHON_INSTALL='sudo easy_install'
      before_install:
        - $PYTHON_INSTALL nose
        # update brew first, work around https://github.com/Homebrew/brew/issues/3299
        - brew update
        - brew install graphviz

    - os: osx
      osx_image: xcode9.3
      language: c++
      compiler: clang
      env:
        - NORMALIZ_VERSION=3.5.4
        - PYTHON_INSTALL='sudo easy_install'
      before_install:
        - $PYTHON_INSTALL nose
        # update brew first, work around https://github.com/Homebrew/brew/issues/3299
        - brew update
        - brew install graphviz

    - os: osx
      osx_image: xcode9.4
      language: c++
      compiler: clang
      env:
        - NORMALIZ_VERSION=3.5.4
        - PYTHON_INSTALL='sudo easy_install'
      before_install:
        - $PYTHON_INSTALL nose
        # update brew first, work around https://github.com/Homebrew/brew/issues/3299
        - brew update
        - brew install graphviz

install:
  - export PROCESSES=4
  - export NOSETESTS_TIMEOUT=600
  - export PATH=${TRAVIS_BUILD_DIR}/dist_install/bin:$PATH
  - export SECDEC_CONTRIB=${TRAVIS_BUILD_DIR}/dist_install/
  - export PYTHONPATH=${TRAVIS_BUILD_DIR}/dist_install/pySecDec_install:$PYTHONPATH
  - if [ x${PYTHON_INSTALL} == x ]; then export PYTHON_INSTALL='pip install'; fi
  - echo running on $TRAVIS_OS_NAME
  - echo using CXX=$CXX
  - python --version
  - $PYTHON_INSTALL --upgrade pip setuptools wheel
  - if [ "$PYTHON_INSTALL" = 'sudo easy_install' ]; then $PYTHON_INSTALL numpy sphinx sympy ; else $PYTHON_INSTALL -r requirements.txt --only-binary=numpy; fi
  - if [ "$TRAVIS_OS_NAME" = 'osx' ]; then make thin-dist; else make dist; fi
  - mv pySecDec-*/ dist_install
  - cd dist_install
  - make -j${PROCESSES}
  - mv pySecDec-*/ pySecDec_install/
  - if [ "$TRAVIS_OS_NAME" = 'osx' ]; then curl -L https://github.com/Normaliz/Normaliz/releases/download/v${NORMALIZ_VERSION}/normaliz-${NORMALIZ_VERSION}MacOs.zip -o normaliz.zip; else curl -L https://github.com/Normaliz/Normaliz/releases/download/v${NORMALIZ_VERSION}/normaliz-${NORMALIZ_VERSION}Linux64.zip -o normaliz.zip; fi
  - unzip normaliz.zip
  - mv normaliz-${NORMALIZ_VERSION}/normaliz bin/normaliz
  - cd ..

script:
  - nosetests --processes=${PROCESSES} --process-timeout=${NOSETESTS_TIMEOUT}
  - make util-check -j${PROCESSES}
  - make doctest -j${PROCESSES}
  - make -C high_level_tests runselected -j${PROCESSES} && make -C high_level_tests summarize-selected
